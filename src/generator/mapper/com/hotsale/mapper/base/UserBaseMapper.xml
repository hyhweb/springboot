<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hotsale.dao.base.UserBaseMapper">


    <insert id="insertUser"  useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO `user`
        (
        <trim suffixOverrides=",">
                    <if test="userId!=null">
                        `user_id`,
                    </if>
                    <if test="userName!=null">
                        `user_name`,
                    </if>
                    <if test="userPassword!=null">
                        `user_password`,
                    </if>
                    <if test="headerUrl!=null">
                        `header_url`,
                    </if>
                    <if test="merchant!=null">
                        `merchant`,
                    </if>
                    <if test="createTime!=null">
                        `create_time`,
                    </if>
        </trim>
        )
        VALUES
        (
        <trim suffixOverrides=",">
                <if test="userId!=null">
                    #{userId},
                </if>
                <if test="userName!=null">
                    #{userName},
                </if>
                <if test="userPassword!=null">
                    #{userPassword},
                </if>
                <if test="headerUrl!=null">
                    #{headerUrl},
                </if>
                <if test="merchant!=null">
                    #{merchant},
                </if>
                <if test="createTime!=null">
                    #{createTime},
                </if>
        </trim>
        )
    </insert>




    <update id="updateUser">
        UPDATE `user`
        SET
        <trim suffixOverrides=",">
            <if test="userName != null and userName!=''">
                `user_name` = #{userName},
            </if>
            <if test="userPassword != null and userPassword!=''">
                `user_password` = #{userPassword},
            </if>
            <if test="headerUrl != null and headerUrl!=''">
                `header_url` = #{headerUrl},
            </if>
            <if test="merchant != null">
                `merchant` = #{merchant},
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime},
            </if>
        </trim>
        WHERE
        <trim suffixOverrides="and">
                `user_id` = #{userId} and
        </trim>
    </update>

    <update id="update">
        UPDATE `user`
        SET
        <trim suffixOverrides=",">
        <if test="set.userName != null and set.userName!=''">
            `user_name` = #{set.userName},
        </if>
        <if test="set.userPassword != null and set.userPassword!=''">
            `user_password` = #{set.userPassword},
        </if>
        <if test="set.headerUrl != null and set.headerUrl!=''">
            `header_url` = #{set.headerUrl},
        </if>
        <if test="set.merchant != null">
            `merchant` = #{set.merchant},
        </if>
        <if test="set.createTime != null">
            `create_time` = #{set.createTime},
        </if>
        </trim>
        <trim prefix="where" suffixOverrides="and | or">
                <if test="where.userIdList != null">
                    `user_id` in
                    <foreach collection="where.userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.userIdSt !=null">
                `user_id` >= #{where.userIdSt} and
            </if>
            <if test="where.userIdEd!=null">
                `user_id` &lt;= #{where.userIdEd} and
            </if>
                <if test="where.userNameList != null">
                    `user_name` in
                    <foreach collection="where.userNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyUserName!=null and where.fuzzyUserName.size()>0">
                (
                <foreach collection="where.fuzzyUserName"  separator="or" item="item">
                    `User_name` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyUserName!=null and where.rightFuzzyUserName.size()>0">
                (
                <foreach collection="where.rightFuzzyUserName"  separator="or" item="item">
                    `User_name` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.userPasswordList != null">
                    `user_password` in
                    <foreach collection="where.userPasswordList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyUserPassword!=null and where.fuzzyUserPassword.size()>0">
                (
                <foreach collection="where.fuzzyUserPassword"  separator="or" item="item">
                    `User_password` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyUserPassword!=null and where.rightFuzzyUserPassword.size()>0">
                (
                <foreach collection="where.rightFuzzyUserPassword"  separator="or" item="item">
                    `User_password` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.headerUrlList != null">
                    `header_url` in
                    <foreach collection="where.headerUrlList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test ="where.fuzzyHeaderUrl!=null and where.fuzzyHeaderUrl.size()>0">
                (
                <foreach collection="where.fuzzyHeaderUrl"  separator="or" item="item">
                    `Header_url` like concat('%',#{item},'%')
                </foreach>
                ) and
            </if>
            <if test ="where.rightFuzzyHeaderUrl!=null and where.rightFuzzyHeaderUrl.size()>0">
                (
                <foreach collection="where.rightFuzzyHeaderUrl"  separator="or" item="item">
                    `Header_url` like concat(#{item},'%')
                </foreach>
                ) and
            </if>
                <if test="where.merchantList != null">
                    `merchant` in
                    <foreach collection="where.merchantList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.merchantSt !=null">
                `merchant` >= #{where.merchantSt} and
            </if>
            <if test="where.merchantEd!=null">
                `merchant` &lt;= #{where.merchantEd} and
            </if>
                <if test="where.createTimeList != null">
                    `create_time` in
                    <foreach collection="where.createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
            <if test="where.createTimeSt !=null">
                `create_time` >= #{where.createTimeSt} and
            </if>
            <if test="where.createTimeEd!=null">
                `create_time` &lt;= #{where.createTimeEd} and
            </if>
        </trim>
    </update>


    <resultMap type="com.hotsale.entity.User" id="UserMap">
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="headerUrl" column="header_url"/>
        <result property="merchant" column="merchant"/>
        <result property="createTime" column="create_time"/>
    </resultMap>


    <select id="queryUser" resultMap="UserMap">
        select
        <include refid="baseResult"></include>
        from  `user`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="userName != null and userName!=''">
                `user_name` = #{userName} and
            </if>
            <if test="userPassword != null and userPassword!=''">
                `user_password` = #{userPassword} and
            </if>
            <if test="headerUrl != null and headerUrl!=''">
                `header_url` = #{headerUrl} and
            </if>
            <if test="merchant != null">
                `merchant` = #{merchant} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test = "(_parameter instanceof com.hotsale.entity.User$QueryBuilder) == true">
                <if test="userIdList != null">
                    `user_id` in
                    <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                <if test="userNameList != null">
                    `user_name` in
                    <foreach collection="userNameList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyUserName!=null and fuzzyUserName.size()>0">
                    (
                    <foreach collection="fuzzyUserName"  separator="or" item="item">
                        `User_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUserName!=null and rightFuzzyUserName.size()>0">
                    (
                    <foreach collection="rightFuzzyUserName"  separator="or" item="item">
                        `User_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="userPasswordList != null">
                    `user_password` in
                    <foreach collection="userPasswordList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyUserPassword!=null and fuzzyUserPassword.size()>0">
                    (
                    <foreach collection="fuzzyUserPassword"  separator="or" item="item">
                        `User_password` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUserPassword!=null and rightFuzzyUserPassword.size()>0">
                    (
                    <foreach collection="rightFuzzyUserPassword"  separator="or" item="item">
                        `User_password` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="headerUrlList != null">
                    `header_url` in
                    <foreach collection="headerUrlList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test ="fuzzyHeaderUrl!=null and fuzzyHeaderUrl.size()>0">
                    (
                    <foreach collection="fuzzyHeaderUrl"  separator="or" item="item">
                        `Header_url` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyHeaderUrl!=null and rightFuzzyHeaderUrl.size()>0">
                    (
                    <foreach collection="rightFuzzyHeaderUrl"  separator="or" item="item">
                        `Header_url` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test="merchantList != null">
                    `merchant` in
                    <foreach collection="merchantList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="merchantSt !=null">
                    `merchant` >= #{merchantSt} and
                </if>
                <if test="merchantEd!=null">
                    `merchant` &lt;= #{merchantEd} and
                </if>
                <if test="createTimeList != null">
                    `create_time` in
                    <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                        #{item}
                    </foreach> and
                </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
            </if>
        </trim>
    </select>

    <select id="queryUserLimit1" resultMap="UserMap">
        select
        <include refid="baseResult"></include>
        from  `user`
        <trim prefix="where" suffixOverrides="and | or">
            <if test="userId != null">
                `user_id` = #{userId} and
            </if>
            <if test="userName != null and userName!=''">
                `user_name` = #{userName} and
            </if>
            <if test="userPassword != null and userPassword!=''">
                `user_password` = #{userPassword} and
            </if>
            <if test="headerUrl != null and headerUrl!=''">
                `header_url` = #{headerUrl} and
            </if>
            <if test="merchant != null">
                `merchant` = #{merchant} and
            </if>
            <if test="createTime != null">
                `create_time` = #{createTime} and
            </if>
            <if test = "(_parameter instanceof com.hotsale.entity.User$QueryBuilder) == true">
                    <if test="userIdList != null">
                        `user_id` in
                        <foreach collection="userIdList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="userIdSt !=null">
                    `user_id` >= #{userIdSt} and
                </if>
                <if test="userIdEd!=null">
                    `user_id` &lt;= #{userIdEd} and
                </if>
                    <if test="userNameList != null">
                        `user_name` in
                        <foreach collection="userNameList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyUserName!=null and fuzzyUserName.size()>0">
                    (
                    <foreach collection="fuzzyUserName"  separator="or" item="item">
                        `User_name` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUserName!=null and rightFuzzyUserName.size()>0">
                    (
                    <foreach collection="rightFuzzyUserName"  separator="or" item="item">
                        `User_name` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="userPasswordList != null">
                        `user_password` in
                        <foreach collection="userPasswordList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyUserPassword!=null and fuzzyUserPassword.size()>0">
                    (
                    <foreach collection="fuzzyUserPassword"  separator="or" item="item">
                        `User_password` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyUserPassword!=null and rightFuzzyUserPassword.size()>0">
                    (
                    <foreach collection="rightFuzzyUserPassword"  separator="or" item="item">
                        `User_password` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="headerUrlList != null">
                        `header_url` in
                        <foreach collection="headerUrlList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test ="fuzzyHeaderUrl!=null and fuzzyHeaderUrl.size()>0">
                    (
                    <foreach collection="fuzzyHeaderUrl"  separator="or" item="item">
                        `Header_url` like concat('%',#{item},'%')
                    </foreach>
                    ) and
                </if>
                <if test ="rightFuzzyHeaderUrl!=null and rightFuzzyHeaderUrl.size()>0">
                    (
                    <foreach collection="rightFuzzyHeaderUrl"  separator="or" item="item">
                        `Header_url` like concat(#{item},'%')
                    </foreach>
                    ) and
                </if>
                    <if test="merchantList != null">
                        `merchant` in
                        <foreach collection="merchantList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="merchantSt !=null">
                    `merchant` >= #{merchantSt} and
                </if>
                <if test="merchantEd!=null">
                    `merchant` &lt;= #{merchantEd} and
                </if>
                    <if test="createTimeList != null">
                        `create_time` in
                        <foreach collection="createTimeList" close=")" open="(" separator="," item="item">
                            #{item}
                        </foreach> and
                    </if>
                <if test="createTimeSt !=null">
                    `create_time` >= #{createTimeSt} and
                </if>
                <if test="createTimeEd!=null">
                    `create_time` &lt;= #{createTimeEd} and
                </if>
            </if>
        </trim>
        limit 1
    </select>

    <sql id="allResult">
        <trim suffixOverrides=",">
        `user_id`,
        `user_name`,
        `user_password`,
        `header_url`,
        `merchant`,
        `create_time`,
        </trim>
    </sql>



    <sql id="baseResult">
        <trim suffixOverrides=",">
            <if test = "(_parameter instanceof com.hotsale.entity.User$QueryBuilder) == true">

                <if test="fetchFields==null">
                    <include refid="allResult"></include>
                </if>
                <if test="fetchFields!=null">
                    <if test="fetchFields.AllFields !=null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields ==null and fetchFields.fetchFields==null and fetchFields.excludeFields==null and fetchFields.otherFields==null">
                        <include refid="allResult"></include>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.fetchFields!=null">
                    <if test="fetchFields.fetchFields.userId==true">
                        `user_id`,
                    </if>
                    <if test="fetchFields.fetchFields.userName==true">
                        `user_name`,
                    </if>
                    <if test="fetchFields.fetchFields.userPassword==true">
                        `user_password`,
                    </if>
                    <if test="fetchFields.fetchFields.headerUrl==true">
                        `header_url`,
                    </if>
                    <if test="fetchFields.fetchFields.merchant==true">
                        `merchant`,
                    </if>
                    <if test="fetchFields.fetchFields.createTime==true">
                        `create_time`,
                    </if>
                    </if>
                    <if test="fetchFields.AllFields==null and fetchFields.excludeFields!=null">
                    <if test="fetchFields.excludeFields.userId==null">
                        `user_id`,
                    </if>
                    <if test="fetchFields.excludeFields.userName==null">
                        `user_name`,
                    </if>
                    <if test="fetchFields.excludeFields.userPassword==null">
                        `user_password`,
                    </if>
                    <if test="fetchFields.excludeFields.headerUrl==null">
                        `header_url`,
                    </if>
                    <if test="fetchFields.excludeFields.merchant==null">
                        `merchant`,
                    </if>
                    <if test="fetchFields.excludeFields.createTime==null">
                        `create_time`,
                    </if>
                    </if>
                    <if test="fetchFields.otherFields!=null and fetchFields.otherFields.size>0">
                        <foreach collection="fetchFields.otherFields" index="index" item="item" separator=",">
                        `#{item}`
                        </foreach>
                    </if>
                </if>
            </if>
            <if test="(_parameter instanceof com.hotsale.entity.User$QueryBuilder) == false" >
                <include refid="allResult"></include>
            </if>

        </trim>
    </sql>


</mapper>